#+title: README
#+date: <2022-06-14 Tue>
#+author: Kristian Alexander P
#+email: alexforsale@yahoo.com
#+language: en
#+creator: Emacs 27.2 (Org mode 9.5.4)
This configuration was inspired by the [[https://github.com/SystemCrafters/rational-emacs][rational-emacs configuration]] from the [[https://www.youtube.com/c/SystemCrafters/videos][systemcrafters series]]. So instead of blindly copying every snippets of /Emacs/ configuration I've found on the internet, I'm taking the lighter approach and *try* to only use what is necessary.

With that in mind, I'm breaking down this configuration into separate /pluggable/ files that can be /included/ on demand. But the general goal is to only use what's already built-in to /Emacs/ as much as possible. Just like many other /dotfiles/ I've used so far, this configuration will be generated from a single /org-mode/ file (the one you're reading right now).

By default this will creates an =emacs= directory insinde =~/.config= or wherever the =${XDG_CONFIG_HOME}= is set. If you're using [[https://github.com/plexus/chemacs2][chemacs]], or if you want to use the standard =~/.emacs.d= directory, modify the =:tangle= directive inside each heading's =:PROPERTIES:=.

To easily toggle the additional packages, create a =config-user.el= file inside =user-emacs-directory=, usually =~/.config/emacs=. This file also generate =~/.config/emacs/config-user.el.example=:
* Example =config-user.el=
  :PROPERTIES:
  :header-args: :tangle (expand-file-name "config-user.el.example" user-emacs-directory)
  :END:
** Commented header
   #+begin_src emacs-lisp
     ;;; config-user.el --- Emacs configuration file -*- lexical-binding: t mode: emacs-lisp -*-
     ;;; Commentary:
     ;; See `https://java281.dynv6.net/~alexforsale/posts/Emacs-Configuration.html'
     ;; for details.
     ;;; Code:
   #+end_src
** And set variables for various packages.
   #+begin_src emacs-lisp
     (setq user-full-name "Kristian Alexander P"
           user-mail-address "alexforsale@yahoo.com")
     (customize-set-variable 'org-directory (expand-file-name "Documents/google-drive/org/" (getenv "HOME")))
     (customize-set-variable '+org-archives-file (expand-file-name "archives.org" org-directory))
     (customize-set-variable '+org-capture-todo-file (expand-file-name "todo.org" org-directory))
     (customize-set-variable '+org-capture-links-file (expand-file-name "links.org" org-directory))
     (customize-set-variable '+org-capture-notes-file (expand-file-name "notes.org" org-directory))
     (customize-set-variable '+org-capture-habits-file (expand-file-name "habits.org" org-directory))
     (customize-set-variable '+org-capture-projects-file (expand-file-name "projects.org" org-directory))
     (customize-set-variable 'org-agenda-files (list org-directory))
     (customize-set-variable '+emms-music-dir "~/Music")
     (customize-set-variable '+config-doom-theme 'doom-solarized-dark)
     (customize-set-variable '+config-standard-theme 'wombat)
     (customize-set-variable '+mail-directory "~/.mail")

     ;; example theme customization
     (when (string= "doom-solarized-dark"
                    (or +config-doom-theme
                        +config-standard-theme))
       (setq doom-solarized-dark-brighter-text t)
       (setq doom-solarized-dark-brighter-comments t)
       (setq doom-solarized-dark-brighter-modeline t))
   #+end_src
** UI Packages
   #+begin_src emacs-lisp
     ;; UI Additional packages
     ;; (require 'config-all-the-icons)
     ;; (require 'config-doom-modelines)
     ;; (require 'config-doom-themes)
     ;; (when (display-graphic-p)
     ;;   (require 'config-theme-magic))
     (require 'config-helpful)
     (require 'config-which-key)
     ;; (require 'config-ace-window)
     ;; (require 'config-perspective)
     ;; (unless (or (featurep 'exwm)
     ;;             (string= "exwm" (getenv "DESKTOP_SESSION")))
     ;;   (require 'config-centaur-tabs)) ; doesn't look good in workspaces
     ;; (require 'config-rainbow-mode)
     ;; (require 'config-rainbow-delimiters)
     ;; (require 'config-hl-todo)
     (require 'config-diminish)
     ;; (require 'config-dashboard)
     ;; (require 'config-alert)
     ;; (require 'config-smartparens)
     ;; (require 'config-treemacs)
     ;; (require 'config-vertico-posframe)
  #+end_src
** Editing packages
   #+begin_src emacs-lisp
     ;; Editing Additional packages
     ;; (require 'config-multiple-cursors)
     ;; (require 'config-yasnippet)
     ;; (require 'config-geiser)
     ;; (require 'config-yaml-mode)
     ;; (require 'config-toml-mode)
     ;; (require 'config-nix-mode)
     ;; (require 'config-markdown-mode)
     ;; (require 'config-rust-mode)
     ;; (require 'config-visual-regexp)
     ;; (require 'config-undo-fu)
     ;; (require 'config-block-nav)
     ;; (require 'config-ansible)
     ;; (require 'config-jinja2-mode)
     ;; (require 'config-hydra)
     ;; (require 'config-general)
     ;; (require 'config-evil)
     ;; (require 'config-aggressive-indent-mode)
   #+end_src
** Org packages
   #+begin_src emacs-lisp
     ;; Org Additional packages
     ;; (require 'config-org-roam)
     ;; (require 'config-org-elfeed)
     ;; (require 'config-org-gcal)
     ;; (+config/org-gcal-setup-sync)
     (require 'config-org-journal)
   #+end_src
** IDE packages
   #+begin_src emacs-lisp
     ;; IDE Additional packages
     ;; (require 'config-flycheck)
     ;; (require 'config-projectile)
     ;; (require 'config-lsp-mode)
     ;; (require 'config-git-gutter)
   #+end_src
** Email packages
   #+begin_src emacs-lisp
     ;; Email Additional packages
     ;; (require 'config-notmuch)
     ;; (require 'config-gnus-alias)
     ;; (customize-set-variable '+config/mail-fetch-program "mbsync")
   #+end_src
** Various additional packages
   #+begin_src emacs-lisp
     ;; Shell Additional packages
     ;; (require 'config-vterm)
   #+end_src
** Completion packages
   #+begin_src emacs-lisp
     ;; Completion packages
     ;; (require 'config-vertico)
     ;; (require 'config-orderless)
     ;; (require 'config-marginalia)
     ;; (require 'config-consult)
     ;; (require 'config-embark)
     ;; (require 'config-corfu)
     ;; (require 'config-cape)
     ;; (require 'config-dabbrev)
  #+end_src
** Tools packages
   #+begin_src emacs-lisp
     ;; Misc tools packages
     ;; (require 'config-pass)
     (require 'config-magit)
     (require 'config-git-modes)
     ;;(require 'config-slime)
     ;;(require 'config-sly) ; a better repl than slime
     ;;(require 'config-paredit)
     ;; (require 'config-telega)
     ;; (require 'config-emms)
     ;;(+config/emms-set-mpd) ; when using mpd
     ;; (require 'config-w3m)
     ;; (require 'config-pdf-tools)
     ;; (require 'config-gist)
     ;; (require 'config-ripgrep)
     ;; (require 'config-restart-emacs)
     ;; (require 'config-hugo)
   #+end_src
** Theme
   #+begin_src emacs-lisp
     (defun +config/load-theme (theme)
       "Load THEME after new frame.
     Also for the current frame"
       (progn
         (load-theme theme t)
         (add-hook 'after-make-frame-functions
                   (lambda (frame)
                     (select-frame frame)
                     (when (display-graphic-p frame)
                       (load-theme theme t))))))

     (cond ((and (featurep 'config-doom-themes)
                 (featurep 'consult)
                 (display-graphic-p))
            (+config/load-theme +config-doom-theme))
           (t
            (+config/load-theme +config-standard-theme)))
   #+end_src
** Footer
   #+begin_src emacs-lisp
     (provide 'config-user)
     ;;; config-user.el ends here
   #+end_src
